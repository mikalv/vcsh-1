(use-package! "unit-test")

(define-test char-alphabetic?

  (test-case (not (char-alphabetic? 0)))
  (test-case (not (char-alphabetic? 0.0)))
  (test-case (not (char-alphabetic? "non-string")))

  (test-case (not (char-alphabetic? #\0)))
  (test-case (not (char-alphabetic? #\9)))
  (test-case (not (char-alphabetic? #\space)))
  (test-case (not (char-alphabetic? #\newline)))
  (test-case (not (char-alphabetic? #\cr)))
  (test-case (not (char-alphabetic? #\tab)))
  (test-case (not (char-alphabetic? #\\)))

  (test-case (char-alphabetic? #\a))
  (test-case (char-alphabetic? #\b))
  (test-case (char-alphabetic? #\c))
  (test-case (char-alphabetic? #\d))
  (test-case (char-alphabetic? #\e))
  (test-case (char-alphabetic? #\f))
  (test-case (char-alphabetic? #\g))
  (test-case (char-alphabetic? #\h))
  (test-case (char-alphabetic? #\i))
  (test-case (char-alphabetic? #\j))
  (test-case (char-alphabetic? #\k))
  (test-case (char-alphabetic? #\l))
  (test-case (char-alphabetic? #\m))
  (test-case (char-alphabetic? #\n))
  (test-case (char-alphabetic? #\o))
  (test-case (char-alphabetic? #\p))
  (test-case (char-alphabetic? #\q))
  (test-case (char-alphabetic? #\r))
  (test-case (char-alphabetic? #\s))
  (test-case (char-alphabetic? #\t))
  (test-case (char-alphabetic? #\u))
  (test-case (char-alphabetic? #\v))
  (test-case (char-alphabetic? #\w))
  (test-case (char-alphabetic? #\x))
  (test-case (char-alphabetic? #\y))
  (test-case (char-alphabetic? #\z))
  (test-case (char-alphabetic? #\A))
  (test-case (char-alphabetic? #\B))
  (test-case (char-alphabetic? #\C))
  (test-case (char-alphabetic? #\D))
  (test-case (char-alphabetic? #\E))
  (test-case (char-alphabetic? #\F))
  (test-case (char-alphabetic? #\G))
  (test-case (char-alphabetic? #\H))
  (test-case (char-alphabetic? #\I))
  (test-case (char-alphabetic? #\J))
  (test-case (char-alphabetic? #\K))
  (test-case (char-alphabetic? #\L))
  (test-case (char-alphabetic? #\M))
  (test-case (char-alphabetic? #\N))
  (test-case (char-alphabetic? #\O))
  (test-case (char-alphabetic? #\P))
  (test-case (char-alphabetic? #\Q))
  (test-case (char-alphabetic? #\R))
  (test-case (char-alphabetic? #\S))
  (test-case (char-alphabetic? #\T))
  (test-case (char-alphabetic? #\U))
  (test-case (char-alphabetic? #\V))
  (test-case (char-alphabetic? #\W))
  (test-case (char-alphabetic? #\X))
  (test-case (char-alphabetic? #\Y))
  (test-case (char-alphabetic? #\Z)))

(define-test char-numeric?

  (test-case (not (char-numeric? 0)))
  (test-case (not (char-numeric? 0.0)))
  (test-case (not (char-numeric? "non-string")))

  (test-case (not (char-numeric? #\a)))
  (test-case (not (char-numeric? #\z)))
  (test-case (not (char-numeric? #\A)))
  (test-case (not (char-numeric? #\Z)))
  (test-case (not (char-numeric? #\space)))
  (test-case (not (char-numeric? #\newline)))
  (test-case (not (char-numeric? #\cr)))
  (test-case (not (char-numeric? #\tab)))
  (test-case (not (char-numeric? #\\)))

  (test-case (char-numeric? #\0))
  (test-case (char-numeric? #\1))
  (test-case (char-numeric? #\2))
  (test-case (char-numeric? #\3))
  (test-case (char-numeric? #\4))
  (test-case (char-numeric? #\5))
  (test-case (char-numeric? #\6))
  (test-case (char-numeric? #\7))
  (test-case (char-numeric? #\8))
  (test-case (char-numeric? #\9)))

(define-test char-whitespace?

  (test-case (not (char-whitespace? 0)))
  (test-case (not (char-whitespace? 0.0)))
  (test-case (not (char-whitespace? "non-string")))

  (test-case (not (char-whitespace? #\a)))
  (test-case (not (char-whitespace? #\z)))
  (test-case (not (char-whitespace? #\A)))
  (test-case (not (char-whitespace? #\Z)))
  (test-case (not (char-whitespace? #\\)))
  (test-case (not (char-whitespace? #\0)))
  (test-case (not (char-whitespace? #\9)))

  (test-case (char-whitespace? #\space))
  (test-case (char-whitespace? #\newline))
  (test-case (char-whitespace? #\cr))
  (test-case (char-whitespace? #\tab)))

(define-test char-upper-case?

  (test-case (not (char-upper-case? 0)))
  (test-case (not (char-upper-case? 0.0)))
  (test-case (not (char-upper-case? "non-string")))

  (test-case (not (char-upper-case? #\space)))
  (test-case (not (char-upper-case? #\newline)))
  (test-case (not (char-upper-case? #\cr)))
  (test-case (not (char-upper-case? #\tab)))
  (test-case (not (char-upper-case? #\\)))

  (test-case (not (char-upper-case? #\a)))
  (test-case (not (char-upper-case? #\b)))
  (test-case (not (char-upper-case? #\c)))
  (test-case (not (char-upper-case? #\d)))
  (test-case (not (char-upper-case? #\e)))
  (test-case (not (char-upper-case? #\f)))
  (test-case (not (char-upper-case? #\g)))
  (test-case (not (char-upper-case? #\h)))
  (test-case (not (char-upper-case? #\i)))
  (test-case (not (char-upper-case? #\j)))
  (test-case (not (char-upper-case? #\k)))
  (test-case (not (char-upper-case? #\l)))
  (test-case (not (char-upper-case? #\m)))
  (test-case (not (char-upper-case? #\n)))
  (test-case (not (char-upper-case? #\o)))
  (test-case (not (char-upper-case? #\p)))
  (test-case (not (char-upper-case? #\q)))
  (test-case (not (char-upper-case? #\r)))
  (test-case (not (char-upper-case? #\x)))
  (test-case (not (char-upper-case? #\t)))
  (test-case (not (char-upper-case? #\u)))
  (test-case (not (char-upper-case? #\v)))
  (test-case (not (char-upper-case? #\w)))
  (test-case (not (char-upper-case? #\x)))
  (test-case (not (char-upper-case? #\y)))
  (test-case (not (char-upper-case? #\z)))

  (test-case (char-upper-case? #\A))
  (test-case (char-upper-case? #\B))
  (test-case (char-upper-case? #\C))
  (test-case (char-upper-case? #\D))
  (test-case (char-upper-case? #\E))
  (test-case (char-upper-case? #\F))
  (test-case (char-upper-case? #\G))
  (test-case (char-upper-case? #\H))
  (test-case (char-upper-case? #\I))
  (test-case (char-upper-case? #\J))
  (test-case (char-upper-case? #\K))
  (test-case (char-upper-case? #\L))
  (test-case (char-upper-case? #\M))
  (test-case (char-upper-case? #\N))
  (test-case (char-upper-case? #\O))
  (test-case (char-upper-case? #\P))
  (test-case (char-upper-case? #\Q))
  (test-case (char-upper-case? #\R))
  (test-case (char-upper-case? #\S))
  (test-case (char-upper-case? #\T))
  (test-case (char-upper-case? #\U))
  (test-case (char-upper-case? #\V))
  (test-case (char-upper-case? #\W))
  (test-case (char-upper-case? #\X))
  (test-case (char-upper-case? #\Y))
  (test-case (char-upper-case? #\Z)))

(define-test char-lower-case?

  (test-case (not (char-lower-case? 0)))
  (test-case (not (char-lower-case? 0.0)))
  (test-case (not (char-lower-case? "non-string")))

  (test-case (not (char-lower-case? #\space)))
  (test-case (not (char-lower-case? #\newline)))
  (test-case (not (char-lower-case? #\cr)))
  (test-case (not (char-lower-case? #\tab)))
  (test-case (not (char-lower-case? #\\)))

  (test-case (char-lower-case? #\a))
  (test-case (char-lower-case? #\b))
  (test-case (char-lower-case? #\c))
  (test-case (char-lower-case? #\d))
  (test-case (char-lower-case? #\e))
  (test-case (char-lower-case? #\f))
  (test-case (char-lower-case? #\g))
  (test-case (char-lower-case? #\h))
  (test-case (char-lower-case? #\i))
  (test-case (char-lower-case? #\j))
  (test-case (char-lower-case? #\k))
  (test-case (char-lower-case? #\l))
  (test-case (char-lower-case? #\m))
  (test-case (char-lower-case? #\n))
  (test-case (char-lower-case? #\o))
  (test-case (char-lower-case? #\p))
  (test-case (char-lower-case? #\q))
  (test-case (char-lower-case? #\r))
  (test-case (char-lower-case? #\x))
  (test-case (char-lower-case? #\t))
  (test-case (char-lower-case? #\u))
  (test-case (char-lower-case? #\v))
  (test-case (char-lower-case? #\w))
  (test-case (char-lower-case? #\x))
  (test-case (char-lower-case? #\y))
  (test-case (char-lower-case? #\z))

  (test-case (not (char-lower-case? #\A)))
  (test-case (not (char-lower-case? #\B)))
  (test-case (not (char-lower-case? #\C)))
  (test-case (not (char-lower-case? #\D)))
  (test-case (not (char-lower-case? #\E)))
  (test-case (not (char-lower-case? #\F)))
  (test-case (not (char-lower-case? #\G)))
  (test-case (not (char-lower-case? #\H)))
  (test-case (not (char-lower-case? #\I)))
  (test-case (not (char-lower-case? #\J)))
  (test-case (not (char-lower-case? #\K)))
  (test-case (not (char-lower-case? #\L)))
  (test-case (not (char-lower-case? #\M)))
  (test-case (not (char-lower-case? #\N)))
  (test-case (not (char-lower-case? #\O)))
  (test-case (not (char-lower-case? #\P)))
  (test-case (not (char-lower-case? #\Q)))
  (test-case (not (char-lower-case? #\R)))
  (test-case (not (char-lower-case? #\S)))
  (test-case (not (char-lower-case? #\T)))
  (test-case (not (char-lower-case? #\U)))
  (test-case (not (char-lower-case? #\V)))
  (test-case (not (char-lower-case? #\W)))
  (test-case (not (char-lower-case? #\X)))
  (test-case (not (char-lower-case? #\Y)))
  (test-case (not (char-lower-case? #\Z))))

(define-test char-octal? 

  (test-case (not (char-octal? 0)))
  (test-case (not (char-octal? 0.0)))
  (test-case (not (char-octal? "non-string")))

  (test-case (not (char-octal? #\space)))
  (test-case (not (char-octal? #\newline)))
  (test-case (not (char-octal? #\cr)))
  (test-case (not (char-octal? #\tab)))
  (test-case (not (char-octal? #\\)))

  (test-case (char-octal? #\0))
  (test-case (char-octal? #\1))
  (test-case (char-octal? #\2))
  (test-case (char-octal? #\3))
  (test-case (char-octal? #\4))
  (test-case (char-octal? #\5))
  (test-case (char-octal? #\6))
  (test-case (char-octal? #\7))
  (test-case (not (char-octal? #\8)))
  (test-case (not (char-octal? #\9)))

  (test-case (not (char-octal? #\a)))
  (test-case (not (char-octal? #\b)))
  (test-case (not (char-octal? #\c)))
  (test-case (not (char-octal? #\d)))
  (test-case (not (char-octal? #\e)))
  (test-case (not (char-octal? #\f)))

  (test-case (not (char-octal? #\A)))
  (test-case (not (char-octal? #\B)))
  (test-case (not (char-octal? #\C)))
  (test-case (not (char-octal? #\D)))
  (test-case (not (char-octal? #\E)))
  (test-case (not (char-octal? #\F))))

(define-test char-hex? 

  (test-case (not (char-hex? 0)))
  (test-case (not (char-hex? 0.0)))
  (test-case (not (char-hex? "non-string")))

  (test-case (not (char-hex? #\space)))
  (test-case (not (char-hex? #\newline)))
  (test-case (not (char-hex? #\cr)))
  (test-case (not (char-hex? #\tab)))
  (test-case (not (char-hex? #\\)))

  (test-case (char-hex? #\0))
  (test-case (char-hex? #\1))
  (test-case (char-hex? #\2))
  (test-case (char-hex? #\3))
  (test-case (char-hex? #\4))
  (test-case (char-hex? #\5))
  (test-case (char-hex? #\6))
  (test-case (char-hex? #\7))
  (test-case (char-hex? #\8))
  (test-case (char-hex? #\9))

  (test-case (char-hex? #\a))
  (test-case (char-hex? #\b))
  (test-case (char-hex? #\c))
  (test-case (char-hex? #\d))
  (test-case (char-hex? #\e))
  (test-case (char-hex? #\f))

  (test-case (char-hex? #\A))
  (test-case (char-hex? #\B))
  (test-case (char-hex? #\C))
  (test-case (char-hex? #\D))
  (test-case (char-hex? #\E))
  (test-case (char-hex? #\F)))

(define-test char-upcase

  (test-case (runtime-error? (char-upcase 0)))
  (test-case (runtime-error? (char-upcase 0.0)))
  (test-case (runtime-error? (char-upcase "non-string")))

  (test-case (eq? (char-upcase #\0) #\0))
  (test-case (eq? (char-upcase #\1) #\1))
  (test-case (eq? (char-upcase #\2) #\2))
  (test-case (eq? (char-upcase #\3) #\3))
  (test-case (eq? (char-upcase #\4) #\4))
  (test-case (eq? (char-upcase #\5) #\5))
  (test-case (eq? (char-upcase #\6) #\6))
  (test-case (eq? (char-upcase #\7) #\7))
  (test-case (eq? (char-upcase #\8) #\8))
  (test-case (eq? (char-upcase #\9) #\9))

  (test-case (eq? (char-upcase #\a) #\A))
  (test-case (eq? (char-upcase #\b) #\B))
  (test-case (eq? (char-upcase #\c) #\C))
  (test-case (eq? (char-upcase #\d) #\D))
  (test-case (eq? (char-upcase #\e) #\E))
  (test-case (eq? (char-upcase #\f) #\F))
  (test-case (eq? (char-upcase #\g) #\G))
  (test-case (eq? (char-upcase #\h) #\H))
  (test-case (eq? (char-upcase #\i) #\I))
  (test-case (eq? (char-upcase #\j) #\J))
  (test-case (eq? (char-upcase #\k) #\K))
  (test-case (eq? (char-upcase #\l) #\L))
  (test-case (eq? (char-upcase #\m) #\M))
  (test-case (eq? (char-upcase #\n) #\N))
  (test-case (eq? (char-upcase #\o) #\O))
  (test-case (eq? (char-upcase #\p) #\P))
  (test-case (eq? (char-upcase #\q) #\Q))
  (test-case (eq? (char-upcase #\r) #\R))
  (test-case (eq? (char-upcase #\s) #\S))
  (test-case (eq? (char-upcase #\t) #\T))
  (test-case (eq? (char-upcase #\u) #\U))
  (test-case (eq? (char-upcase #\v) #\V))
  (test-case (eq? (char-upcase #\w) #\W))
  (test-case (eq? (char-upcase #\x) #\X))
  (test-case (eq? (char-upcase #\y) #\Y))
  (test-case (eq? (char-upcase #\z) #\Z))

  (test-case (eq? (char-upcase #\A) #\A))
  (test-case (eq? (char-upcase #\B) #\B))
  (test-case (eq? (char-upcase #\C) #\C))
  (test-case (eq? (char-upcase #\D) #\D))
  (test-case (eq? (char-upcase #\E) #\E))
  (test-case (eq? (char-upcase #\F) #\F))
  (test-case (eq? (char-upcase #\G) #\G))
  (test-case (eq? (char-upcase #\H) #\H))
  (test-case (eq? (char-upcase #\I) #\I))
  (test-case (eq? (char-upcase #\J) #\J))
  (test-case (eq? (char-upcase #\K) #\K))
  (test-case (eq? (char-upcase #\L) #\L))
  (test-case (eq? (char-upcase #\M) #\M))
  (test-case (eq? (char-upcase #\N) #\N))
  (test-case (eq? (char-upcase #\O) #\O))
  (test-case (eq? (char-upcase #\P) #\P))
  (test-case (eq? (char-upcase #\Q) #\Q))
  (test-case (eq? (char-upcase #\R) #\R))
  (test-case (eq? (char-upcase #\S) #\S))
  (test-case (eq? (char-upcase #\T) #\T))
  (test-case (eq? (char-upcase #\U) #\U))
  (test-case (eq? (char-upcase #\V) #\V))
  (test-case (eq? (char-upcase #\W) #\W))
  (test-case (eq? (char-upcase #\X) #\X))
  (test-case (eq? (char-upcase #\Y) #\Y))
  (test-case (eq? (char-upcase #\Z) #\Z)))


(define-test char-downcase

  (test-case (runtime-error? (char-downcase 0)))
  (test-case (runtime-error? (char-downcase 0.0)))
  (test-case (runtime-error? (char-downcase "non-string")))

  (test-case (eq? (char-downcase #\0) #\0))
  (test-case (eq? (char-downcase #\1) #\1))
  (test-case (eq? (char-downcase #\2) #\2))
  (test-case (eq? (char-downcase #\3) #\3))
  (test-case (eq? (char-downcase #\4) #\4))
  (test-case (eq? (char-downcase #\5) #\5))
  (test-case (eq? (char-downcase #\6) #\6))
  (test-case (eq? (char-downcase #\7) #\7))
  (test-case (eq? (char-downcase #\8) #\8))
  (test-case (eq? (char-downcase #\9) #\9))

  (test-case (eq? (char-downcase #\a) #\a))
  (test-case (eq? (char-downcase #\b) #\b))
  (test-case (eq? (char-downcase #\c) #\c))
  (test-case (eq? (char-downcase #\d) #\d))
  (test-case (eq? (char-downcase #\e) #\e))
  (test-case (eq? (char-downcase #\f) #\f))
  (test-case (eq? (char-downcase #\g) #\g))
  (test-case (eq? (char-downcase #\h) #\h))
  (test-case (eq? (char-downcase #\i) #\i))
  (test-case (eq? (char-downcase #\j) #\j))
  (test-case (eq? (char-downcase #\k) #\k))
  (test-case (eq? (char-downcase #\l) #\l))
  (test-case (eq? (char-downcase #\m) #\m))
  (test-case (eq? (char-downcase #\n) #\n))
  (test-case (eq? (char-downcase #\o) #\o))
  (test-case (eq? (char-downcase #\p) #\p))
  (test-case (eq? (char-downcase #\q) #\q))
  (test-case (eq? (char-downcase #\r) #\r))
  (test-case (eq? (char-downcase #\s) #\s))
  (test-case (eq? (char-downcase #\t) #\t))
  (test-case (eq? (char-downcase #\u) #\u))
  (test-case (eq? (char-downcase #\v) #\v))
  (test-case (eq? (char-downcase #\w) #\w))
  (test-case (eq? (char-downcase #\x) #\x))
  (test-case (eq? (char-downcase #\y) #\y))
  (test-case (eq? (char-downcase #\z) #\z))

  (test-case (eq? (char-downcase #\A) #\a))
  (test-case (eq? (char-downcase #\B) #\b))
  (test-case (eq? (char-downcase #\C) #\c))
  (test-case (eq? (char-downcase #\D) #\d))
  (test-case (eq? (char-downcase #\E) #\e))
  (test-case (eq? (char-downcase #\F) #\f))
  (test-case (eq? (char-downcase #\G) #\g))
  (test-case (eq? (char-downcase #\H) #\h))
  (test-case (eq? (char-downcase #\I) #\i))
  (test-case (eq? (char-downcase #\J) #\j))
  (test-case (eq? (char-downcase #\K) #\k))
  (test-case (eq? (char-downcase #\L) #\l))
  (test-case (eq? (char-downcase #\M) #\m))
  (test-case (eq? (char-downcase #\N) #\n))
  (test-case (eq? (char-downcase #\O) #\o))
  (test-case (eq? (char-downcase #\P) #\p))
  (test-case (eq? (char-downcase #\Q) #\q))
  (test-case (eq? (char-downcase #\R) #\r))
  (test-case (eq? (char-downcase #\S) #\s))
  (test-case (eq? (char-downcase #\T) #\t))
  (test-case (eq? (char-downcase #\U) #\u))
  (test-case (eq? (char-downcase #\V) #\v))
  (test-case (eq? (char-downcase #\W) #\w))
  (test-case (eq? (char-downcase #\X) #\x))
  (test-case (eq? (char-downcase #\Y) #\y))
  (test-case (eq? (char-downcase #\Z) #\z)))
