(use-package! "unit-test")

(define-test equal?-simple-list-vector
  (test-case (equal? '(1) '(1)))
  (test-case (equal? '(1 2) '(1 2)))
  (test-case (equal? '(1 . 2) '(1 . 2)))
  (test-case (equal? '(1 2 3) '(1 2 3)))
  (test-case (equal? '(1 2 3 . 4) '(1 2 3 . 4)))
  (test-case (equal? '(1 2 3 4 5 6 7 8 9 10) '(1 2 3 4 5 6 7 8 9 10)))
  (test-case (equal? #(1) #(1)))
  (test-case (equal? #(1 2) #(1 2)))
  (test-case (equal? #(1 2 3) #(1 2 3)))
  (test-case (equal? #(1 2 3 4 5 6 7 8 9 10) #(1 2 3 4 5 6 7 8 9 10)))
  (test-case (not (equal? '(1) '(2))))
  (test-case (not (equal? '(1 2) '(3 2))))
  (test-case (not (equal? '(1 2) '(1 3))))
  (test-case (not (equal? '(1 . 2) '(3 . 2))))
  (test-case (not (equal? '(1 . 3) '(1 . 2))))
  (test-case (not (equal? '(1 2 3) '(2 2 3))))
  (test-case (not (equal? '(1 2 3) '(1 3 3))))
  (test-case (not (equal? '(1 2 3) '(1 2 4))))
  (test-case (not (equal? '(1 2 3 4 5 6 7 8 9 11) '(1 2 3 4 5 6 7 8 9 10))))
  (test-case (not (equal? () #(1 2 3))))
  (test-case (not (equal? #(1 2 3) ())))
  (test-case (not (equal? '(1 2 3) #(1 2 3))))
  (test-case (not (equal? #(1 2 3) '(1 2 3))))
  (test-case (not (equal? #(1) #(2))))
  (test-case (not (equal? #(1) #(1 2))))
  (test-case (not (equal? #(1) #(2 1))))
  (test-case (not (equal? #(1 2) #(3 2))))
  (test-case (not (equal? #(1 2) #(1 3))))
  (test-case (not (equal? #(1 2 3) #(2 2 3))))
  (test-case (not (equal? #(1 2 3) #(1 3 3))))
  (test-case (not (equal? #(1 2 3) #(1 2 4))))
  (test-case (not (equal? #(1 2 3 4 5 6 7 8 9 11) #(1 2 3 4 5 6 7 8 9 10))))
  )
