
(use-package! "unit-test")

(define *fixnum-bits* (* 8 (system-info :size-of-fixnum)))

(define-test bitwise-and
  (check (= (bitwise-and 15 7) 7))
  (check (= (bitwise-and 15 39) 7))
  (check (= (bitwise-and 65535 39) 39))
  (check (= (bitwise-and 65535 0) 0))
  (check (= (bitwise-and 0 0) 0))
  (check (= (bitwise-and 65535 65535) 65535))
  (check (runtime-error? (bitwise-and 15.0 7)))
  (check (runtime-error? (bitwise-and 15 7.0)))
  (check (runtime-error? (bitwise-and 15 #t)))
  (check (runtime-error? (bitwise-and #t 15))))

(define-test bitwise-or
  (check (= (bitwise-or 0) 0))
  (check (= (bitwise-or 15) 15))
  (check (= (bitwise-or 15 7) 15))
  (check (= (bitwise-or 15 39) 47))
  (check (= (bitwise-or 65535 39) 65535))
  (check (= (bitwise-or 65535 0) 65535))
  (check (= (bitwise-or 0 0) 0))
  (check (= (bitwise-or 65535 65535) 65535))
  (check (runtime-error? (bitwise-or 15.0 7)))
  (check (runtime-error? (bitwise-or 15 7.0)))
  (check (runtime-error? (bitwise-or 15 #t)))
  (check (runtime-error? (bitwise-or #t 15))))

(define-test bitwise-xor
  (check (= (bitwise-xor 0) 0))
  (check (= (bitwise-xor 15) 15))
  (check (= (bitwise-xor 15 7) 8))
  (check (= (bitwise-xor 15 39) 40))
  (check (= (bitwise-xor 65535 39) 65496))
  (check (= (bitwise-xor 65535 0) 65535))
  (check (= (bitwise-xor 0 0) 0))
  (check (= (bitwise-xor 65535 65535) 0))
  (check (runtime-error? (bitwise-xor 15.0 7)))
  (check (runtime-error? (bitwise-xor 15 7.0)))
  (check (runtime-error? (bitwise-xor 15 #t)))
  (check (runtime-error? (bitwise-xor #t 15))))

(define-test bitwise-not
  (check (= (bitwise-not 0) -1))
  (check (= (bitwise-not 1) -2))
  (check (= (bitwise-not -1) 0))
  (check (= (bitwise-not -2) 1))
  (check (= (bitwise-not 1000) -1001))
  (check (runtime-error? (bitwise-not 7.0)))
  (check (runtime-error? (bitwise-not #t))))

(define-test bitwise-shift-left
  (check (= (bitwise-shift-left 0 (+ 1 *fixnum-bits*)) 0))
  (check (= (bitwise-shift-left -256 *fixnum-bits*) 0))
  (check (= (bitwise-shift-left 256 *fixnum-bits*) 0))

  (check (= (bitwise-shift-left 0 (+ 1 *fixnum-bits*)) 0))
  (check (= (bitwise-shift-left -256 (+ 1 *fixnum-bits*)) 0))
  (check (= (bitwise-shift-left 256 (+ 1 *fixnum-bits*)) 0))

  (check (= (bitwise-shift-left 1 1) 2))
  (check (= (bitwise-shift-left 1 2) 4))
  (check (= (bitwise-shift-left 1 3) 8))
  (check (= (bitwise-shift-left 1 4) 16))
  (check (= (bitwise-shift-left 1 5) 32))
  (check (= (bitwise-shift-left 1 6) 64))
  (check (= (bitwise-shift-left 1 7) 128))
  (check (= (bitwise-shift-left 1 8) 256))
  (check (= (bitwise-shift-left 5 1) 10))
  (check (= (bitwise-shift-left 5 2) 20))
  (check (= (bitwise-shift-left 5 3) 40))
  (check (= (bitwise-shift-left 5 4) 80))
  (check (= (bitwise-shift-left 5 5) 160))
  (check (= (bitwise-shift-left 5 6) 320))
  (check (= (bitwise-shift-left 5 7) 640))
  (check (= (bitwise-shift-left 5 8) 1280))
  (check (= (bitwise-shift-left 1 0) 1))
  (check (= (bitwise-shift-left 2 0) 2))
  (check (= (bitwise-shift-left 0 1) 0))
  (check (= (bitwise-shift-left 0 2) 0))
  (check (runtime-error? (bitwise-shift-left)))
  (check (runtime-error? (bitwise-shift-left 1))))

(define-test bitwise-shift-right
  (check (= (bitwise-shift-right 0 (+ 1 *fixnum-bits*)) 0))
  (check (= (bitwise-shift-right -256 *fixnum-bits*) 0))
  (check (= (bitwise-shift-right 256 *fixnum-bits*) 0))

  (check (= (bitwise-shift-right 0 (+ 1 *fixnum-bits*)) 0))
  (check (= (bitwise-shift-right -256 (+ 1 *fixnum-bits*)) 0))
  (check (= (bitwise-shift-right 256 (+ 1 *fixnum-bits*)) 0))

  (check (= (bitwise-shift-right 256 9) 0))
  (check (= (bitwise-shift-right 256 8) 1))
  (check (= (bitwise-shift-right 256 7) 2))
  (check (= (bitwise-shift-right 256 6) 4))
  (check (= (bitwise-shift-right 256 5) 8))
  (check (= (bitwise-shift-right 256 4) 16))
  (check (= (bitwise-shift-right 256 3) 32))
  (check (= (bitwise-shift-right 256 2) 64))
  (check (= (bitwise-shift-right 256 1) 128))
  (check (= (bitwise-shift-right 256 0) 256))
  (check (= (bitwise-shift-right 1 0) 1))
  (check (= (bitwise-shift-right 1 1) 0))
  (check (= (bitwise-shift-right 1 8) 0))
  (check (= (bitwise-shift-right 5 0) 5))
  (check (= (bitwise-shift-right 5 1) 2))
  (check (= (bitwise-shift-right 5 2) 1))
  (check (= (bitwise-shift-right 5 3) 0))
  (check (= (bitwise-shift-right 1 0) 1))
  (check (= (bitwise-shift-right 1 0) 1))
  (check (= (bitwise-shift-right 0 1) 0))
  (check (= (bitwise-shift-right 0 8) 0))
  (check (runtime-error? (bitwise-shift-right)))
  (check (runtime-error? (bitwise-shift-right 1))))

(define-test bitwise-arithmatic-shift-right
  (check (= (bitwise-arithmatic-shift-right 0 (+ 1 *fixnum-bits*)) 0))
  (check (= (bitwise-arithmatic-shift-right -256 *fixnum-bits*) 0))
  (check (= (bitwise-arithmatic-shift-right 256 *fixnum-bits*) 0))

  (check (= (bitwise-arithmatic-shift-right 0 (+ 1 *fixnum-bits*)) 0))
  (check (= (bitwise-arithmatic-shift-right -256 (+ 1 *fixnum-bits*)) 0))
  (check (= (bitwise-arithmatic-shift-right 256 (+ 1 *fixnum-bits*)) 0))

  (check (= (bitwise-arithmatic-shift-right 256 9) 0))
  (check (= (bitwise-arithmatic-shift-right 256 8) 1))
  (check (= (bitwise-arithmatic-shift-right 256 7) 2))
  (check (= (bitwise-arithmatic-shift-right 256 6) 4))
  (check (= (bitwise-arithmatic-shift-right 256 5) 8))
  (check (= (bitwise-arithmatic-shift-right 256 4) 16))
  (check (= (bitwise-arithmatic-shift-right 256 3) 32))
  (check (= (bitwise-arithmatic-shift-right 256 2) 64))
  (check (= (bitwise-arithmatic-shift-right 256 1) 128))
  (check (= (bitwise-arithmatic-shift-right 256 0) 256))
  (check (= (bitwise-arithmatic-shift-right 1 0) 1))
  (check (= (bitwise-arithmatic-shift-right 1 1) 0))
  (check (= (bitwise-arithmatic-shift-right 1 8) 0))
  (check (= (bitwise-arithmatic-shift-right 5 0) 5))
  (check (= (bitwise-arithmatic-shift-right 5 1) 2))
  (check (= (bitwise-arithmatic-shift-right 5 2) 1))
  (check (= (bitwise-arithmatic-shift-right 5 3) 0))
  (check (= (bitwise-arithmatic-shift-right 1 0) 1))
  (check (= (bitwise-arithmatic-shift-right 1 0) 1))
  (check (= (bitwise-arithmatic-shift-right 0 0) 0))
  (check (= (bitwise-arithmatic-shift-right 0 1) 0))
  (check (= (bitwise-arithmatic-shift-right 0 8) 0))
  (check (runtime-error? (bitwise-arithmatic-shift-right)))
  (check (runtime-error? (bitwise-arithmatic-shift-right 1))))
