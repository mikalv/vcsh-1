(use-package! "unit-test")

(define-test number-exactness
  (check (exact? 1))
  (check (exact? 100))
  (check (exact? -100))
  (check (inexact? 1.0))
  (check (inexact? 100.0))
  (check (inexact? -100.0))
  (check (inexact? 1e1))
  (check (inexact? 100e1))
  (check (inexact? -100e1))
  (check (not (inexact? 1)))
  (check (not (inexact? 100)))
  (check (not (inexact? -100)))
  (check (not (exact? 1.0)))
  (check (not (exact? 100.0)))
  (check (not (exact? -100.0)))
  (check (not (exact? 1e1)))
  (check (not (exact? 100e1)))
  (check (not (exact? -100e1)))

  (check (runtime-error? (exact->inexact :non-numeric)))
  (check (not (exact? (exact->inexact 1))))
  (check (not (exact? (exact->inexact 100))))
  (check (not (exact? (exact->inexact -100))))

  (check (equal? 1.0 (exact->inexact 1)))
  (check (equal? 100.0 (exact->inexact 100)))
  (check (equal? -100.0 (exact->inexact -100))) 
  
  (check (runtime-error? (inexact->exact :non-numeric)))
  (check (not (inexact? (inexact->exact 1.0))))
  (check (not (inexact? (inexact->exact 100.0))))
  (check (not (inexact? (inexact->exact -100.0))))

  (check (equal? 1 (inexact->exact 1)))
  (check (equal? 1 (inexact->exact 1.0)))
  (check (equal? 100 (inexact->exact 100.0)))
  (check (equal? -100 (inexact->exact -100.0)))

  (check (not (inexact->exact 1e30)))
  (check (not (inexact->exact -1e30))))
