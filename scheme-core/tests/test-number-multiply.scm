(use-package! "unit-test")

(define-test number-multiply
  (check (runtime-error? (* :non-number 12)))
  (check (runtime-error? (* 12 :non-number)))
  (check (runtime-error? (* :non-number)))

  (check (= (* 1) 1))
  (check (inexact-= (* 1.0) 1.0))
  (check (inexact-= (* 1.0) 1))
  (check (inexact-= (* 1) 1.0))
  (check (exact? (* 1)))
  (check (inexact? (* 1.0)))

  (check (= (* 1 2) 2))
  (check (inexact-= (* 21.7 90.2) 1957.34))
  (check (inexact-= (* 1.0 7) 7.0))
  (check (inexact-= (* 1 9.8) 9.8))
  (check (exact? (* 1 2)))
  (check (inexact? (* 1.0 2)))
  (check (inexact? (* 1 2.0)))
  (check (inexact? (* 1.0 2.0)))

  (check (= (* 1 2 3) 6))
  (check (inexact-= (* 21.7 90.2 34.2) 66941.028))
  (check (inexact-= (* 1.0 7 1) 7.0))
  (check (inexact-= (* 1 9.8 11) 107.8))
  (check (exact? (* 1 2 1)))
  (check (inexact? (* 1.0 2 1)))
  (check (inexact? (* 1 2.0 2)))
  (check (inexact? (* 1 2 2.0)))
  (check (inexact? (* 1.0 2.0 4.0)))

  (check (= 3628800 (* 10 9 8 7 6 5 4 3 2 1))	)
  (check (exact? (* 10 9 8 7 6 5 4 3 2 1)))
  (check (inexact? (* 10 9 8 7 6 5.1 4 3 2 1)))
  (check (inexact-= (* 10 9 8 7 6 5.1 4 3 2 1) 3701376)))
