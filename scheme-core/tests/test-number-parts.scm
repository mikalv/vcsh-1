(use-package! "unit-test")

;; Test cases generated with this expression:
;;
;; (dynamic-let ((*flonum-print-precision* 3))
;;   (stable (map (lambda (x)
;;                  `(check (= ,(eval x) ,x)))
;;                (list-combinations '((round truncate floor ceiling)
;;                                     (-20 -1 0 1 20
;;                                          -20.9 -20.6 -20.5 -20.4 -20.1 -20
;;                                          -1.9 -1.6 -1.5 -1.4 -1.1 -1.0
;;                                          -0.9 -0.6 -0.5 -0.4 -0.1 -0.0
;;                                          20.9 20.6 20.5 20.4 20.1 20
;;                                          1.9 1.6 1.5 1.4 1.1 1.0
;sw;                                          0.9 0.6 0.5 0.4 0.1))))))

(define-test number-parts/special-numbers
  (check (runtime-error? (round :non-number   )))
  (check (runtime-error? (ceiling :non-number )))
  (check (runtime-error? (floor :non-number   )))
  (check (runtime-error? (truncate :non-number))))

(define-test number-parts/exact-round
  (check (= -20 (round -20)))
  (check (= -1  (round -1 )))
  (check (= 0   (round 0  )))
  (check (= 1   (round 1  )))
  (check (= 20  (round 20 )))
  (check (= -20 (round -20)))
  (check (= 20  (round 20 ))))

(define-test number-parts/exact-truncate
  (check (= -20 (truncate -20)))
  (check (= -1  (truncate -1 )))
  (check (= 0   (truncate 0  )))
  (check (= 1   (truncate 1  )))
  (check (= 20  (truncate 20 )))
  (check (= -20 (truncate -20)))
  (check (= 20  (truncate 20 ))))

(define-test number-parts/exact-floor
  (check (= -20 (floor -20)))
  (check (= -1  (floor -1 )))
  (check (= 0   (floor 0  )))
  (check (= 1   (floor 1  )))
  (check (= 20  (floor 20 )))
  (check (= -20 (floor -20)))
  (check (= 20  (floor 20 ))))

(define-test number-parts/exact-ceiling
  (check (= -20 (floor -20)))
  (check (= -1  (floor -1 )))
  (check (= 0   (floor 0  )))
  (check (= 1   (floor 1  )))
  (check (= 20  (floor 20 )))
  (check (= -20 (floor -20)))
  (check (= 20  (floor 20 ))))

(define-test number-parts/inexact-round
  (check (= -21.000 (round -20.900)))
  (check (= -21.000 (round -20.600)))
  (check (= -21.000 (round -20.500)))
  (check (= -20.000 (round -20.400)))
  (check (= -20.000 (round -20.100)))

  (check (= -2.000 (round -1.900)))
  (check (= -2.000 (round -1.600)))
  (check (= -2.000 (round -1.500)))
  (check (= -1.000 (round -1.400)))
  (check (= -1.000 (round -1.100)))
  (check (= -1.000 (round -1.000)))
  (check (= -1.000 (round -0.900)))
  (check (= -1.000 (round -0.600)))
  (check (= -1.000 (round -0.500)))
  (check (= -0.000 (round -0.400)))
  (check (= -0.000 (round -0.100)))
  (check (= -0.000 (round -0.000)))
  (check (= 21.000 (round 20.900)))
  (check (= 21.000 (round 20.600)))
  (check (= 21.000 (round 20.500)))
  (check (= 20.000 (round 20.400)))
  (check (= 20.000 (round 20.100)))

  (check (= 2.000 (round 1.900)))
  (check (= 2.000 (round 1.600)))
  (check (= 2.000 (round 1.500)))
  (check (= 1.000 (round 1.400)))
  (check (= 1.000 (round 1.100)))
  (check (= 1.000 (round 1.000)))
  (check (= 1.000 (round 0.900)))
  (check (= 1.000 (round 0.600)))
  (check (= 1.000 (round 0.500)))
  (check (= 0.000 (round 0.400)))
  (check (= 0.000 (round 0.100))))

(define-test number-parts/inexact-truncate
  (check (= -20.000 (truncate -20.900)))
  (check (= -20.000 (truncate -20.600)))
  (check (= -20.000 (truncate -20.500)))
  (check (= -20.000 (truncate -20.400)))
  (check (= -20.000 (truncate -20.100)))
  (check (= -1.000 (truncate -1.900)))
  (check (= -1.000 (truncate -1.600)))
  (check (= -1.000 (truncate -1.500)))
  (check (= -1.000 (truncate -1.400)))
  (check (= -1.000 (truncate -1.100)))
  (check (= -1.000 (truncate -1.000)))
  (check (= -0.000 (truncate -0.900)))
  (check (= -0.000 (truncate -0.600)))
  (check (= -0.000 (truncate -0.500)))
  (check (= -0.000 (truncate -0.400)))
  (check (= -0.000 (truncate -0.100)))
  (check (= -0.000 (truncate -0.000)))
  (check (= 20.000 (truncate 20.900)))
  (check (= 20.000 (truncate 20.600)))
  (check (= 20.000 (truncate 20.500)))
  (check (= 20.000 (truncate 20.400)))
  (check (= 20.000 (truncate 20.100)))
  (check (= 1.000 (truncate 1.900)))
  (check (= 1.000 (truncate 1.600)))
  (check (= 1.000 (truncate 1.500)))
  (check (= 1.000 (truncate 1.400)))
  (check (= 1.000 (truncate 1.100)))
  (check (= 1.000 (truncate 1.000)))
  (check (= 0.000 (truncate 0.900)))
  (check (= 0.000 (truncate 0.600)))
  (check (= 0.000 (truncate 0.500)))
  (check (= 0.000 (truncate 0.400)))
  (check (= 0.000 (truncate 0.100))))


(define-test number-parts/inexact-floor
  
  (check (= -21.000 (floor -20.900)))
  (check (= -21.000 (floor -20.600)))
  (check (= -21.000 (floor -20.500)))
  (check (= -21.000 (floor -20.400)))
  (check (= -21.000 (floor -20.100)))
  (check (= -2.000 (floor -1.900)))
  (check (= -2.000 (floor -1.600)))
  (check (= -2.000 (floor -1.500)))
  (check (= -2.000 (floor -1.400)))
  (check (= -2.000 (floor -1.100)))
  (check (= -1.000 (floor -1.000)))
  (check (= -1.000 (floor -0.900)))
  (check (= -1.000 (floor -0.600)))
  (check (= -1.000 (floor -0.500)))
  (check (= -1.000 (floor -0.400)))
  (check (= -1.000 (floor -0.100)))
  (check (= -0.000 (floor -0.000)))
  (check (= 20.000 (floor 20.900)))
  (check (= 20.000 (floor 20.600)))
  (check (= 20.000 (floor 20.500)))
  (check (= 20.000 (floor 20.400)))
  (check (= 20.000 (floor 20.100)))
  (check (= 1.000 (floor 1.900)))
  (check (= 1.000 (floor 1.600)))
  (check (= 1.000 (floor 1.500)))
  (check (= 1.000 (floor 1.400)))
  (check (= 1.000 (floor 1.100)))
  (check (= 1.000 (floor 1.000)))
  (check (= 0.000 (floor 0.900)))
  (check (= 0.000 (floor 0.600)))
  (check (= 0.000 (floor 0.500)))
  (check (= 0.000 (floor 0.400)))
  (check (= 0.000 (floor 0.100))))

(define-test number-parts/inexact-ceiling
  (check (= -20.000 (ceiling -20.900)))
  (check (= -20.000 (ceiling -20.600)))
  (check (= -20.000 (ceiling -20.500)))
  (check (= -20.000 (ceiling -20.400)))
  (check (= -20.000 (ceiling -20.100)))
  (check (= -1.000 (ceiling -1.900)))
  (check (= -1.000 (ceiling -1.600)))
  (check (= -1.000 (ceiling -1.500)))
  (check (= -1.000 (ceiling -1.400)))
  (check (= -1.000 (ceiling -1.100)))
  (check (= -1.000 (ceiling -1.000)))
  (check (= -0.000 (ceiling -0.900)))
  (check (= -0.000 (ceiling -0.600)))
  (check (= -0.000 (ceiling -0.500)))
  (check (= -0.000 (ceiling -0.400)))
  (check (= -0.000 (ceiling -0.100)))
  (check (= -0.000 (ceiling -0.000)))
  (check (= 21.000 (ceiling 20.900)))
  (check (= 21.000 (ceiling 20.600)))
  (check (= 21.000 (ceiling 20.500)))
  (check (= 21.000 (ceiling 20.400)))
  (check (= 21.000 (ceiling 20.100)))
  (check (= 2.000 (ceiling 1.900)))
  (check (= 2.000 (ceiling 1.600)))
  (check (= 2.000 (ceiling 1.500)))
  (check (= 2.000 (ceiling 1.400)))
  (check (= 2.000 (ceiling 1.100)))
  (check (= 1.000 (ceiling 1.000)))
  (check (= 1.000 (ceiling 0.900)))
  (check (= 1.000 (ceiling 0.600)))
  (check (= 1.000 (ceiling 0.500)))
  (check (= 1.000 (ceiling 0.400)))
  (check (= 1.000 (ceiling 0.100))))
