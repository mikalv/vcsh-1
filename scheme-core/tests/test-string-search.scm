(use-package! "unit-test")

(define-test string-search
  (test-case (equal? 2  (string-search "345" "1234567890")))
  (test-case (equal? #f (string-search "34567890a" "1234567890")))
  (test-case (equal? #f (string-search "hello world" "1234567890")))
  (test-case (equal? 0  (string-search "1" "1234567890")))
  (test-case (equal? 9  (string-search "0" "1234567890")))
  (test-case (equal? 1  (string-search "2" "1234512345")))
  (test-case (equal? 1  (string-search "2" "1234512345" 0)))
  (test-case (equal? 6  (string-search "2" "1234512345" 4)))
  (test-case (equal? 6  (string-search "234" "1234512345" 4)))
  (test-case (equal? 1  (string-search "234" "1234512345" 1)))
  (test-case (equal? 6  (string-search "234" "1234512345" 6)))
  (test-case (equal? #f (string-search "234" "1234512345" 60)))
  (test-case (equal? #f (string-search "234" "1234512345" 8)))
  (test-case (equal? 0  (string-search "ab" "abaabaaabaaaab")))
  (test-case (equal? 5  (string-search "aaa"  "abaabaaabaaaab"))   )
  (test-case (equal? 5  (string-search "aaab" "abaabaaabaaaab")))

  (test-case (equal? 1  (string-search "aaab" "aaaab")))
  (test-case (equal? 1  (string-search "aaab" "aaaab" 1)))
  (test-case (equal? #f  (string-search "aaab" "aaaab" 2)))

  (test-case (equal? 0  (string-search #\1 "1234567890")))
  (test-case (equal? 9  (string-search #\0 "1234567890")))
  (test-case (equal? 1  (string-search #\2 "1234512345")))
  (test-case (equal? 1  (string-search #\2 "1234512345" 0)))
  (test-case (equal? 6  (string-search #\2 "1234512345" 4)))
  (test-case (equal? 0  (string-search #\a "abaabaaabaaaab"))))
