(use-package! "unit-test")

(define-test vector-ref
  (let ((a (vector :a :b :c :d :e)))
    (test-case (runtime-error? (vector-ref '(1 2 3 4) 2)))
    (test-case (runtime-error? (vector-ref a 'sym)))
    (test-case (runtime-error? (vector-ref a -1)))    
    (test-case (eq? :a (vector-ref a 0)))
    (test-case (eq? :a (vector-ref a 0.0)))
    (test-case (eq? :b (vector-ref a 1)))
    (test-case (eq? :c (vector-ref a 2)))
    (test-case (eq? :d (vector-ref a 3.0)))
    (test-case (eq? :e (vector-ref a 4)))
    (test-case (runtime-error? (vector-ref a 5)))
    (test-case (runtime-error? (vector-ref a -5 :default)))
    (test-case (not (runtime-error? (vector-ref a 5 :default))))
    (test-case (eq? :default (vector-ref a 5 :default)))
    (test-case (runtime-error? (vector-ref a -5.0 :default)))
    (test-case (not (runtime-error? (vector-ref a 5.0 :default))))
    (test-case (eq? :default (vector-ref a 5.0 :default)))
    ))
